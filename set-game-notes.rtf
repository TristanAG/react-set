{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11700\viewh9600\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs26 \cf0 set-game-notes
\b0 \
\
//seems to be a good strategy, break down the actions into simple steps. If it can execute all the actions, then you\'92re chillin!\
\
select a card\
	pass selected card ref up\
	insert into array\
deselect a card\
	pass the card ref up\
	you find the card is already there\
	remove from array\
select 3 unique cards\
	show alert\
	action will rerender deck to clear all state back to default\
\
so it seems that i\'92m stuck on the very final task, and that is the rerender. i do have the ability now to change things based on state\'85 but there are ways to approach.\
\
and i got it!
\f1 \uc0\u55357 \u56833 
\f0 \
\
so now we are fully in determineIfMatch now! It needs to determine if there is a set\'85 and the way we do this is by going through a checklist of rules. this is where it gets fun, honestly\'85 how do we define these rules?\
\
if \
\
all are different && match\
all are same && match\
\
you will be able to determine the set based on a process of checking things and narrow down.\
let\'92s just start with color first, since it\'92s there.\
\
look at first card.color and save as colorOfCardOne\
look at second card.color and save as colorOfCardTwo\
if colorOfCardOne === colorOfCardTwo save matchTracking = true\'85 mn, this is gonna be a doozy.\
\
if you know all colors are the same\
if you know all colors\'85. think of it like a table.. \
\
card1	red	diamond	1	\
card2 red	diamond	2\
card3 red 	diamond	3\
	same	same		different (but valid)\
\
there are 3 data points for each card\
\
}